!
!  ROMS/TOMS Standard Input parameters.
!
!svn $Id$
!========================================================= Hernan G. Arango ===
!  Copyright (c) 2002-2014 The ROMS/TOMS Group                                !
!    Licensed under a MIT/X style license                                     !
!    See License_ROMS.txt                                                     !
!==============================================================================
!                                                                             !
! Input parameters can be entered in ANY order, provided that the parameter   !
! KEYWORD (usually, upper case) is typed correctly followed by "="  or "=="   !
! symbols. Any comment lines are allowed and must begin with an exclamation   !
! mark (!) in column one.  Comments may  appear to the right of a parameter   !
! specification to improve documentation.  Comments will be ignored  during   !
! reading.  Blank lines are also allowed and ignored. Continuation lines in   !
! a parameter specification are allowed and must be preceded by a backslash   !
! (\).  In some instances, more than one value is required for a parameter.   !
! If fewer values are provided, the  last value  is assigned for the entire   !
! parameter array.  The multiplication symbol (*),  without blank spaces in   !
! between, is allowed for a parameter specification.  For example, in a two   !
! grids nested application:                                                   !
!                                                                             !
!    AKT_BAK == 2*1.0d-6  2*5.0d-6              ! m2/s                        !
!                                                                             !
! indicates that the first two entries of array AKT_BAK,  in fortran column-  !
! major order, will have the same value of "1.0d-6" for grid 1,  whereas the  !
! next two entries will have the same value of "5.0d-6" for grid 2.           !
!                                                                             !
! In multiple levels of nesting and/or multiple connected domains  step-ups,  !
! "Ngrids" entries are expected for some of these parameters.  In such case,  !
! the order of the entries for a parameter is extremely important.  It  must  !
! follow the same order (1:Ngrids) as in the state variable declaration. The  !
! USER may follow the above guidelines for specifying his/her values.  These  !
! parameters are marked by "==" plural symbol after the KEYWORD.              !
!                                                                             !
! Multiple NetCDF files are allowed for input field(s).  This is useful when  !
! splitting input data (climatology,  boundary,  forcing)  time records into  !
! several files (say monthly, annual, etc). In this case, each multiple file  !
! entry line needs to be ended by the vertical bar (|) symbol. For example:   !
!                                                                             !
!    NFFILES == 7                          ! number of forcing files          !
!                                                                             !
!    FRCNAME == my_tides.nc       \                                           !
!               my_lwrad_year1.nc |                                           !
!               my_lwrad_year2.nc \                                           !
!               my_swrad_year1.nc |                                           !
!               my_swrad_year2.nc \                                           !
!               my_winds_year1.nc |                                           !
!               my_winds_year2.nc \                                           !
!               my_Pair_year1.nc  |                                           !
!               my_Pair_year2.nc  \                                           !
!               my_Qair_year1.nc  |                                           !
!               my_Qair_year2.nc  \                                           !
!               my_Tair_year1.nc  |                                           !
!               my_Tair_year2.nc                                              !
!                                                                             !
! Notice that NFFILES is 7 and not 13. There are 7 uniquely different fields  !
! in the file list,  we  DO NOT  count file entries followed by the vertical  !
! bar symbol.  This is because  multiple file  entries are processed in ROMS  !
! with derived type structures.                                               !
!                                                                             !
!==============================================================================
!
! Application title.

       TITLE = Texas-Louisiana shelf hindcast with dyes

! C-preprocessing Flag.

    MyAppCPP = TXLA2

! Input variable information file name.  This file needs to be processed
! first so all information arrays can be initialized properly.

     VARNAME = varinfo.dat

! Number of nested grids.

      Ngrids =  1

! Number of grid nesting layers.  This parameter is used to allow refinement
! and composite grid combinations.

  NestLayers =  1

! Number of grids in each nesting layer [1:NestLayers].

GridsInLayer =  1

! Grid dimension parameters. See notes below in the Glossary for how to set
! these parameters correctly.

          Lm == 669           ! Number of I-direction INTERIOR RHO-points
          Mm == 189           ! Number of J-direction INTERIOR RHO-points
           N == 30            ! Number of vertical levels

        Nbed =  1             ! Number of sediment bed layers

         NAT =  2             ! Number of active tracers (usually, 2)
         NPT =  6             ! Number of inactive passive tracers
         NCS =  0             ! Number of cohesive (mud) sediment tracers
         NNS =  0             ! Number of non-cohesive (sand) sediment tracers

! Domain decomposition parameters for serial, distributed-memory or
! shared-memory configurations used to determine tile horizontal range
! indices (Istr,Iend) and (Jstr,Jend), [1:Ngrids].

      NtileI == 2                               ! I-direction partition
      NtileJ == 2                               ! J-direction partition
!      NtileI == 10                               ! I-direction partition
!      NtileJ == 12                               ! J-direction partition

! Set lateral boundary conditions keyword. Notice that a value is expected
! for each boundary segment per nested grid for each state variable.
!
! Each tracer variable requires [1:4,1:NAT+NPT,Ngrids] values. Otherwise,
! [1:4,1:Ngrids] values are expected for other variables. The boundary
! order is: 1=west, 2=south, 3=east, and 4=north. That is, anticlockwise
! starting at the western boundary.
!
! The keyword is case insensitive and usually has three characters. However,
! it is possible to have compound keywords, if applicable. For example, the
! keyword "RadNud" implies radiation boundary condition with nudging. This
! combination is usually used in active/passive radiation conditions.
!
!   Keyword    Lateral Boundary Condition Type
!
!   Cha        Chapman_implicit (free-surface)
!   Che        Chapman_explicit (free-surface)
!   Cla        Clamped
!   Clo        Closed
!   Fla        Flather (2D momentum)                  _____N_____     j=Mm
!   Gra        Gradient                              |     4     |
!   Nes        Nested (refinement)                   |           |
!   Nud        Nudging                             1 W           E 3
!   Per        Periodic                              |           |
!   Rad        Radiation                             |_____S_____|
!   Red        Reduced Physics (2D momentum)               2          j=1
!   Shc        Shchepetkin (2D momentum)            i=1         i=Lm
!
!                   W       S       E       N
!                   e       o       a       o
!                   s       u       s       r
!                   t       t       t       t
!                           h               h
!
!                   1       2       3       4

!   LBC(isFsur) ==   Cha     Cha     Cha     Clo         ! free-surface
!   LBC(isUbar) ==   Fla     Fla     Fla     Clo         ! 2D U-momentum
!   LBC(isVbar) ==   Fla     Fla     Fla     Clo         ! 2D V-momentum
!   LBC(isUvel) ==   RadNud  Cla     RadNud  Clo         ! 3D U-momentum
!   LBC(isVvel) ==   RadNud  Cla     RadNud  Clo         ! 3D V-momentum
!   LBC(isMtke) ==   Rad     Rad     Rad     Clo         ! mixing TKE
   LBC(isFsur) ==   Che     Che     Che     Clo         ! free-surface
   LBC(isUbar) ==   Shc     Shc     Shc     Clo         ! 2D U-momentum
   LBC(isVbar) ==   Shc     Shc     Shc     Clo         ! 2D V-momentum
   LBC(isUvel) ==   Rad     Rad     Rad     Clo         ! 3D U-momentum
   LBC(isVvel) ==   Rad     Rad     Rad     Clo         ! 3D V-momentum
   LBC(isMtke) ==   Gra     Gra     Gra     Clo         ! mixing TKE

   LBC(isTvar) ==   Rad     Rad     Rad     Clo \       ! temperature
                    Rad     Rad     Rad     Clo \       ! salinity
                    Rad     Rad     Rad     Clo \       ! dye 01 
                    Rad     Rad     Rad     Clo \       ! dye 02 
                    Rad     Rad     Rad     Clo \       ! dye 03 
                    Rad     Rad     Rad     Clo \       ! dye 04 
                    Rad     Rad     Rad     Clo \       ! dye 05
                    Rad     Rad     Rad     Clo         ! dye 06 

! Ice boundary conditions

   LBC(isAice) ==   Clo     Clo     Clo     Clo         ! ice concentration
   LBC(isHice) ==   Clo     Clo     Clo     Clo         ! ice thickness
   LBC(isHsno) ==   Clo     Clo     Clo     Clo         ! snow thickness
   LBC(isTice) ==   Clo     Clo     Clo     Clo         ! ice temperature
   LBC(isSfwat)==   Clo     Clo     Clo     Clo         ! surface water
   LBC(isSig11)==   Clo     Clo     Clo     Clo         ! sigma-11
   LBC(isSig12)==   Clo     Clo     Clo     Clo         ! sigma-12
   LBC(isSig22)==   Clo     Clo     Clo     Clo         ! sigma-22
   LBC(isUice) ==   Clo     Clo     Clo     Clo         ! ice U-momentum
   LBC(isVice) ==   Clo     Clo     Clo     Clo         ! ice V-momentum

! Adjoint-based algorithms can have different lateral boundary
! conditions keywords.

ad_LBC(isFsur) ==   Clo     Clo     Cha     Clo         ! free-surface
ad_LBC(isUbar) ==   Clo     Clo     Fla     Clo         ! 2D U-momentum
ad_LBC(isVbar) ==   Clo     Clo     Fla     Clo         ! 2D U-momentum
ad_LBC(isUvel) ==   Clo     Clo     Rad     Clo         ! 3D U-momentum
ad_LBC(isVvel) ==   Clo     Clo     Rad     Clo         ! 3D V-momentum
ad_LBC(isMtke) ==   Clo     Clo     Gra     Clo         ! mixing TKE

ad_LBC(isTvar) ==   Clo     Clo     Rad     Clo \       ! temperature
                    Clo     Clo     Rad     Clo         ! salinity

! Set lateral open boundary edge volume conservation switch for
! nonlinear model and adjoint-based algorithms. Usually activated
! with radiation boundary conditions to enforce global mass
! conservation, except if tidal forcing is enabled. [1:Ngrids].

   VolCons(west)  ==  F                            ! western  boundary
   VolCons(east)  ==  F                            ! eastern  boundary
   VolCons(south) ==  F                            ! southern boundary
   VolCons(north) ==  F                            ! northern boundary

ad_VolCons(west)  ==  F                            ! western  boundary
ad_VolCons(east)  ==  F                            ! eastern  boundary
ad_VolCons(south) ==  F                            ! southern boundary
ad_VolCons(north) ==  F                            ! northern boundary

! Time-Stepping parameters.

      NTIMES == 394200    !365 days   
          DT == 80.0
     NDTFAST == 40

! Model iteration loops parameters.

       ERstr =  1
       ERend =  1
      Nouter =  1
      Ninner =  1
  Nintervals =  1

! Number of eigenvalues (NEV) and eigenvectors (NCV) to compute for the
! Lanczos/Arnoldi problem in the Generalized Stability Theory (GST)
! analysis. NCV must be greater than NEV (see documentation below).

         NEV =  2                               ! Number of eigenvalues
         NCV =  10                              ! Number of eigenvectors

! Input/Output parameters.

!       NRREC == 0
       NRREC == -1
   LcycleRST == F
        NRST == 1080  !24 hourly for DT=80
        NSTA == 45  
        NFLT == 15
       NINFO == 1

! Output history, average, diagnostic files parameters.

     LDEFOUT == T
        NHIS == 45   !1 hourly for DT=80
     NDEFHIS == 16200
      NTSAVG == 1
        NAVG == 1080   !24 hr for DT=80
    NDEFAVG  == 16200
      NTSDIA == 1
        NDIA == 1080
     NDEFDIA == 16200 

! Output tangent linear and adjoint models parameters.

   LcycleTLM == F
        NTLM == 360
     NDEFTLM == 0
   LcycleADJ == F
        NADJ == 360
     NDEFADJ == 0
        NSFF == 360
        NOBC == 360

! GST output and check pointing restart parameters.

   LmultiGST =  F                               ! one eigenvector per file
     LrstGST =  F                               ! GST restart switch
  MaxIterGST =  500                             ! maximum number of iterations
        NGST =  10                              ! check pointing interval

! Relative accuracy of the Ritz values computed in the GST analysis.

    Ritz_tol =  1.0d-15

! Harmonic/biharmonic horizontal diffusion of tracer for nonlinear model
! and adjoint-based algorithms: [1:NAT+NPT,Ngrids].

        TNU2 == 6*1.0d0                         ! m2/s
        TNU4 == 2*0.0d0                         ! m4/s

     ad_TNU2 == 0.0d0  0.0d0                    ! m2/s
     ad_TNU4 == 0.0d0  0.0d0                    ! m4/s

! Harmonic/biharmonic, horizontal viscosity coefficient for nonlinear model
! and adjoint-based algorithms: [Ngrids].

       VISC2 == 5.0d0                           ! m2/s
       VISC4 == 0.0d0                           ! m4/s

    ad_VISC2 == 0.0d0                           ! m2/s
    ad_VISC4 == 0.0d0                           ! m4/s

! Logical switches (TRUE/FALSE) to increase/decrease horizontal viscosity
! and/or diffusivity in specific areas of the application domain (like
! sponge areas) for the desired application grid.

    LuvSponge == T                              ! horizontal momentum
LtracerSponge == T T T T T T                    ! temperature, salinity, inert

! Vertical mixing coefficients for tracers in nonlinear model and
! basic state scale factor in adjoint-based algorithms: [1:NAT+NPT,Ngrids]

     AKT_BAK == 1.0d-6 1.0d-6 1.0d-6 1.0d-6 1.0d-6 1.0d-6       ! m2/s

  ad_AKT_fac == 1.0d0  1.0d0                    ! nondimensional

! Vertical mixing coefficient for momentum for nonlinear model and
! basic state scale factor in adjoint-based algorithms: [Ngrids].

     AKV_BAK == 1.0d-5                          ! m2/s

  ad_AKV_fac == 1.0d0                           ! nondimensional


! Upper threshold values to limit vertical mixing coefficients computed
! from vertical mixing parameterizations. Although this is an engineering
! fix, the vertical mixing values inferred from ocean observations are
! rarely higher than this upper limit value.

   AKT_LIMIT == 1.0d-3 1.0d-3                   ! m2/s

   AKV_LIMIT == 1.0d-3                          ! m2/s


! Turbulent closure parameters.

     AKK_BAK == 5.0d-6                          ! m2/s
     AKP_BAK == 5.0d-6                          ! m2/s
      TKENU2 == 0.0d0                           ! m2/s
      TKENU4 == 0.0d0                           ! m4/s

! Generic length-scale turbulence closure parameters.

        GLS_P == -1.0d0                          ! k-omega
        GLS_M ==  0.5d0
        GLS_N == -1.0d0
!     GLS_Kmin ==  7.6d-6
     GLS_Kmin ==  1.0d-9     !used for GOTM
     GLS_Pmin ==  1.0d-12

     GLS_CMU0 ==  0.5477d0
       GLS_C1 ==  0.555d0
       GLS_C2 ==  0.833d0
      GLS_C3M == -0.6d0
      GLS_C3P ==  1.0d0
     GLS_SIGK ==  2.0d0
     GLS_SIGP ==  2.0d0

! Constants used in surface turbulent kinetic energy flux computation.

  CHARNOK_ALPHA == 1400.0d0         ! Charnok surface roughness
 ZOS_HSIG_ALPHA == 0.5d0            ! roughness from wave amplitude
       SZ_ALPHA == 0.25d0           ! roughness from wave dissipation
      CRGBAN_CW == 100.0d0          ! Craig and Banner wave breaking

! Constants used in momentum stress computation.

        RDRG == 3.0d-04                    ! m/s
       RDRG2 == 3.0d-03                    ! nondimensional
         Zob == 0.005d0                    ! m
         Zos == 0.02d0                     ! m

! Height (m) of atmospheric measurements for Bulk fluxes parameterization.

      BLK_ZQ == 2.0d0                     ! air humidity
      BLK_ZT == 2.0d0                     ! air temperature
      BLK_ZW == 10.0d0                     ! winds

! Minimum depth for wetting and drying.

       DCRIT == 0.10d0                     ! m

! Various parameters.

       WTYPE == 3
     LEVSFRC == 15
     LEVBFRC == 1

! Set vertical, terrain-following coordinates transformation equation and
! stretching function (see below for details), [1:Ngrids].

  Vtransform == 2                          ! transformation equation
 Vstretching == 4                          ! stretching function

! Vertical S-coordinates parameters (see below for details), [1:Ngrids].

     THETA_S == 5.0d0                      ! surface stretching parameter
     THETA_B == 0.4d0                      ! bottom  stretching parameter
      TCLINE == 20.0d0                      ! critical depth (m)

! Mean Density and Brunt-Vaisala frequency.

        RHO0 =  1025.0d0                   ! kg/m3
     BVF_BAK =  1.0d-4                     ! 1/s2

! Time-stamp assigned for model initialization, reference time
! origin for tidal forcing, and model reference time for output
! NetCDF units attribute.

      DSTART =  13514.0d0                    ! days (2007-01-01)
  TIDE_START =  0.0d0                        ! days
    TIME_REF =  19700101.0d0                 ! yyyymmdd.dd

! Nudging/relaxation time scales, inverse scales will be computed
! internally, [1:Ngrids].

       TNUDG == 6*1.0d0            ! days
       ZNUDG == 0.0d0                      ! days
      M2NUDG == 1.0d0                      ! days
      M3NUDG == 1.0d0                    ! days


! Factor between passive (outflow) and active (inflow) open boundary
! conditions, [1:Ngrids]. If OBCFAC > 1, nudging on inflow is stronger
! than on outflow (recommended).

      OBCFAC == 30.0d0                      ! nondimensional


! Linear equation of State parameters:

          R0 == 1027.0d0                   ! kg/m3
          T0 == 10.0d0                     ! Celsius
          S0 == 35.0d0                     ! nondimensional
       TCOEF == 1.7d-4                     ! 1/Celsius
       SCOEF == 7.6d-4                     ! nondimensional

! Slipperiness parameter: 1.0 (free slip) or -1.0 (no slip)

      GAMMA2 == 1.0d0

! Logical switches (TRUE/FALSE) to activate horizontal momentum transport
! point Sources/Sinks (like river runoff transport) and mass point
! Sources/Sinks (like volume vertical influx), [1:Ngrids].

      LuvSrc == T                          ! horizontal momentum transport
       LwSrc == F                          ! volume vertical influx

! Logical switches (TRUE/FALSE) to activate tracers point Sources/Sinks
! (like river runoff) and to specify which tracer variables to consider:
! [1:NAT+NPT,Ngrids].  See glossary below for details.

!  LtracerSrc == T T                        ! temperature, salinity, inert
  LtracerSrc == T T T T T T T T              ! temperature, salinity, inert

! Logical switches (TRUE/FALSE) to read and process climatology fields.
! See glossary below for details.

     LsshCLM == F                          ! sea-surface height
      Lm2CLM == F                          ! 2D momentum
      Lm3CLM == T                          ! 3D momentum

!  LtracerCLM == T T                        ! temperature, salinity, inert
  LtracerCLM == T T T T T T T T            ! temperature, salinity, inert

! Logical switches (TRUE/FALSE) to nudge the desired climatology field(s).
! If not analytical climatology fields, users need to turn ON the logical
! switches above to process the fields from the climatology NetCDF file
! that are needed for nudging. See glossary below for details.

! Important Note
! If you want to use spatially-varying nugigng regardless of nc file or
! analytical, you need to activate climatogical nudging below, 
! LnudgeM3CLM, LnudgeTCLM
! You DO NOT need to activate Lm3CLM and LtracerCLM to use this 
!

 LnudgeM2CLM == F                          ! 2D momentum
 LnudgeM3CLM == T                          ! 3D momentum

!  LnudgeTCLM == T T                        ! temperature, salinity, inert
  LnudgeTCLM == T T T T T T F F                    ! temperature, salinity, inert

! Starting (DstrS) and ending (DendS) day for adjoint sensitivity forcing.
! DstrS must be less or equal to DendS. If both values are zero, their
! values are reset internally to the full range of the adjoint integration.

       DstrS == 0.0d0                      ! starting day
       DendS == 0.0d0                      ! ending day

! Starting and ending vertical levels of the 3D adjoint state variables
! whose sensitivity is required.

       KstrS == 1                          ! starting level
       KendS == 1                          ! ending level

! Logical switches (TRUE/FALSE) to specify the adjoint state variables
! whose sensitivity is required.

Lstate(isFsur) == F                        ! free-surface
Lstate(isUbar) == F                        ! 2D U-momentum
Lstate(isVbar) == F                        ! 2D V-momentum
Lstate(isUvel) == F                        ! 3D U-momentum
Lstate(isVvel) == F                        ! 3D V-momentum

Lstate(isTvar) == F F                      ! NT tracers

! Logical switches (TRUE/FALSE) to specify the state variables for
! which Forcing Singular Vectors or Stochastic Optimals is required.

Fstate(isFsur) == F                        ! free-surface
Fstate(isUbar) == F                        ! 2D U-momentum
Fstate(isVbar) == F                        ! 2D V-momentum
Fstate(isUvel) == F                        ! 3D U-momentum
Fstate(isVvel) == F                        ! 3D V-momentum
Fstate(isTvar) == F F                      ! NT tracers

Fstate(isUstr) == T                        ! surface U-stress
Fstate(isVstr) == T                        ! surface V-stress
Fstate(isTsur) == F F                      ! NT surface tracers flux

! Stochastic Optimals time decorrelation scale (days) assumed for
! red noise processes.

      SO_decay == 2.0d0                    ! days

! Stochastic Optimals surface forcing standard deviation for
! dimensionalization.

SO_sdev(isFsur) == 1.0d0                   ! free-surface
SO_sdev(isUbar) == 1.0d0                   ! 2D U-momentum
SO_sdev(isVbar) == 1.0d0                   ! 2D V-momentum
SO_sdev(isUvel) == 1.0d0                   ! 3D U-momentum
SO_sdev(isVvel) == 1.0d0                   ! 3D V-momentum
SO_sdev(isTvar) == 1.0d0 1.0d0             ! NT tracers

SO_sdev(isUstr) == 1.0d0                   ! surface U-stress
SO_sdev(isVstr) == 1.0d0                   ! surface V-stress
SO_sdev(isTsur) == 1.0d0 1.0d0             ! NT surface tracers flux

! Logical switches (TRUE/FALSE) to activate writing of fields into
! HISTORY output file.

Hout(idUvel) == T       ! u                  3D U-velocity
Hout(idVvel) == T       ! v                  3D V-velocity
Hout(idu3dE) == F       ! u_eastward         3D U-eastward  at RHO-points
Hout(idv3dN) == F       ! v_northward        3D V-northward at RHO-points
Hout(idWvel) == T       ! w                  3D W-velocity
Hout(idOvel) == F       ! omega              omega vertical velocity
Hout(idUbar) == F       ! ubar               2D U-velocity
Hout(idVbar) == F       ! vbar               2D V-velocity
Hout(idu2dE) == F       ! ubar_eastward      2D U-eastward  at RHO-points
Hout(idv2dN) == F       ! vbar_northward     2D V-northward at RHO-points
Hout(idFsur) == T       ! zeta               free-surface
Hout(idBath) == F       ! bath               time-dependent bathymetry

Hout(idTvar) == T T     ! temp, salt         temperature and salinity

Hout(idUsms) == T       ! sustr              surface U-stress
Hout(idVsms) == T       ! svstr              surface V-stress
Hout(idUbms) == F       ! bustr              bottom U-stress
Hout(idVbms) == F       ! bvstr              bottom V-stress

Hout(idUbrs) == F       ! bustrc             bottom U-current stress
Hout(idVbrs) == F       ! bvstrc             bottom V-current stress
Hout(idUbws) == F       ! bustrw             bottom U-wave stress
Hout(idVbws) == F       ! bvstrw             bottom V-wave stress
Hout(idUbcs) == F       ! bustrcwmax         bottom max wave-current U-stress
Hout(idVbcs) == F       ! bvstrcwmax         bottom max wave-current V-stress

Hout(idUbot) == F       ! Ubot               bed wave orbital U-velocity
Hout(idVbot) == F       ! Vbot               bed wave orbital V-velocity
Hout(idUbur) == F       ! Ur                 bottom U-velocity above bed
Hout(idVbvr) == F       ! Vr                 bottom V-velocity above bed

Hout(idW2xx) == F       ! Sxx_bar            2D radiation stress, Sxx component
Hout(idW2xy) == F       ! Sxy_bar            2D radiation stress, Sxy component
Hout(idW2yy) == F       ! Syy_bar            2D radiation stress, Syy component
Hout(idU2rs) == F       ! Ubar_Rstress       2D radiation U-stress
Hout(idV2rs) == F       ! Vbar_Rstress       2D radiation V-stress
Hout(idU2Sd) == F       ! ubar_stokes        2D U-Stokes velocity
Hout(idV2Sd) == F       ! vbar_stokes        2D V-Stokes velocity

Hout(idW3xx) == F       ! Sxx                3D radiation stress, Sxx component
Hout(idW3xy) == F       ! Sxy                3D radiation stress, Sxy component
Hout(idW3yy) == F       ! Syy                3D radiation stress, Syy component
Hout(idW3zx) == F       ! Szx                3D radiation stress, Szx component
Hout(idW3zy) == F       ! Szy                3D radiation stress, Szy component
Hout(idU3rs) == F       ! u_Rstress          3D U-radiation stress
Hout(idV3rs) == F       ! v_Rstress          3D V-radiation stress
Hout(idU3Sd) == F       ! u_stokes           3D U-Stokes velocity
Hout(idV3Sd) == F       ! v_stokes           3D V-Stokes velocity

Hout(idWamp) == F       ! Hwave              wave height
Hout(idWlen) == F       ! Lwave              wave length
Hout(idWdir) == F       ! Dwave              wave direction
Hout(idWptp) == F       ! Pwave_top          wave surface period
Hout(idWpbt) == F       ! Pwave_bot          wave bottom period
Hout(idWorb) == F       ! Ub_swan            wave bottom orbital velocity
Hout(idWdis) == F       ! Wave_dissip        wave dissipation

Hout(idPair) == F       ! Pair               surface air pressure
Hout(idUair) == T       ! Uair               surface U-wind component
Hout(idVair) == T       ! Vair               surface V-wind component

Hout(idTsur) == T T     ! shflux, ssflux     surface net heat and salt flux
Hout(idLhea) == F       ! latent             latent heat flux
Hout(idShea) == F       ! sensible           sensible heat flux
Hout(idLrad) == F       ! lwrad              longwave radiation flux
Hout(idSrad) == F       ! swrad              shortwave radiation flux
Hout(idEmPf) == F       ! EminusP            E-P flux
Hout(idevap) == F       ! evaporation        evaporation rate
Hout(idrain) == F       ! rain               precipitation rate

Hout(idDano) == F       ! rho                density anomaly
Hout(idVvis) == T       ! AKv                vertical viscosity
Hout(idTdif) == F       ! AKt                vertical T-diffusion
Hout(idSdif) == T       ! AKs                vertical Salinity diffusion
Hout(idHsbl) == F       ! Hsbl               depth of surface boundary layer(only with KPP)
Hout(idHbbl) == F       ! Hbbl               depth of bottom boundary layer(only with KPP)
Hout(idMtke) == T       ! tke                turbulent kinetic energy
Hout(idMtls) == T       ! gls                turbulent length scale

! Logical switches (TRUE/FALSE) to activate writing of extra inert passive
! tracers other than biological and sediment tracers. An inert passive tracer
! is one that it is only advected and diffused. Other processes are ignored.
! These tracers include, for example, dyes, pollutants, oil spills, etc.
! NPT values are expected. However, these switches can be activated using
! compact parameter specification.

 Hout(inert) == T       ! dye_01, ...        inert passive tracers

! Logical switches (TRUE/FALSE) to activate writing of exposed sediment
! layer properties into HISTORY output file.  Currently, MBOTP properties
! are expected for the bottom boundary layer and/or sediment models:
!
! idBott( 1=isd50)   grain_diameter          mean grain diameter
! idBott( 2=idens)   grain_density           mean grain density
! idBott( 3=iwsed)   settling_vel            mean settling velocity
! idBott( 4=itauc)   erosion_stress          critical erosion stress
! idBott( 5=irlen)   ripple_length           ripple length
! idBott( 6=irhgt)   ripple_height           ripple height
! idBott( 7=ibwav)   bed_wave_amp            wave excursion amplitude
! idBott( 8=izdef)   Zo_def                  default bottom roughness
! idBott( 9=izapp)   Zo_app                  apparent bottom roughness
! idBott(10=izNik)   Zo_Nik                  Nikuradse bottom roughness
! idBott(11=izbio)   Zo_bio                  biological bottom roughness
! idBott(12=izbfm)   Zo_bedform              bed form bottom roughness
! idBott(13=izbld)   Zo_bedload              bed load bottom roughness
! idBott(14=izwbl)   Zo_wbl                  wave bottom roughness
! idBott(15=iactv)   active_layer_thickness  active layer thickness
! idBott(16=ishgt)   saltation               saltation height
!
!                                 1 1 1 1 1 1 1
!               1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6

Hout(idBott) == T T F T T T T F T T F F F F T F

! Logical switches (TRUE/FALSE) to activate writing of time-averaged
! fields into AVERAGE output file.

Aout(idUvel) == T       ! u                  3D U-velocity
Aout(idVvel) == T       ! v                  3D V-velocity
Aout(idu3dE) == F       ! u_eastward         3D U-eastward  at RHO-points
Aout(idv3dN) == F       ! v_northward        3D V-northward at RHO-points
Aout(idWvel) == T       ! w                  3D W-velocity
Aout(idOvel) == F       ! omega              omega vertical velocity
Aout(idUbar) == T       ! ubar               2D U-velocity
Aout(idVbar) == T       ! vbar               2D V-velocity
Aout(idu2dE) == F       ! ubar_eastward      2D U-eastward  at RHO-points
Aout(idv2dN) == F       ! vbar_northward     2D V-northward at RHO-points
Aout(idFsur) == T       ! zeta               free-surface

Aout(idTvar) == T T     ! temp, salt         temperature and salinity

Aout(idUsms) == T       ! sustr              surface U-stress
Aout(idVsms) == T       ! svstr              surface V-stress
Aout(idUbms) == F       ! bustr              bottom U-stress
Aout(idVbms) == F       ! bvstr              bottom V-stress

Aout(idW2xx) == F       ! Sxx_bar            2D radiation stress, Sxx component
Aout(idW2xy) == F       ! Sxy_bar            2D radiation stress, Sxy component
Aout(idW2yy) == F       ! Syy_bar            2D radiation stress, Syy component
Aout(idU2rs) == F       ! Ubar_Rstress       2D radiation U-stress
Aout(idV2rs) == F       ! Vbar_Rstress       2D radiation V-stress
Aout(idU2Sd) == F       ! ubar_stokes        2D U-Stokes velocity
Aout(idV2Sd) == F       ! vbar_stokes        2D V-Stokes velocity

Aout(idW3xx) == F       ! Sxx                3D radiation stress, Sxx component
Aout(idW3xy) == F       ! Sxy                3D radiation stress, Sxy component
Aout(idW3yy) == F       ! Syy                3D radiation stress, Syy component
Aout(idW3zx) == F       ! Szx                3D radiation stress, Szx component
Aout(idW3zy) == F       ! Szy                3D radiation stress, Szy component
Aout(idU3rs) == F       ! u_Rstress          3D U-radiation stress
Aout(idV3rs) == F       ! v_Rstress          3D V-radiation stress
Aout(idU3Sd) == F       ! u_stokes           3D U-Stokes velocity
Aout(idV3Sd) == F       ! v_stokes           3D V-Stokes velocity

Aout(idPair) == F       ! Pair               surface air pressure
Aout(idUair) == T       ! Uair               surface U-wind component
Aout(idVair) == T       ! Vair               surface V-wind component

Aout(idTsur) == T T     ! shflux, ssflux     surface net heat and salt flux
Aout(idLhea) == F       ! latent             latent heat flux
Aout(idShea) == F       ! sensible           sensible heat flux
Aout(idLrad) == F       ! lwrad              longwave radiation flux
Aout(idSrad) == F       ! swrad              shortwave radiation flux
Aout(idevap) == F       ! evaporation        evaporation rate
Aout(idrain) == F       ! rain               precipitation rate

Aout(idDano) == T       ! rho                density anomaly
Aout(idVvis) == T       ! AKv                vertical viscosity
Aout(idTdif) == T       ! AKt                vertical T-diffusion
Aout(idSdif) == T       ! AKs                vertical Salinity diffusion
Aout(idHsbl) == F       ! Hsbl               depth of surface boundary layer
Aout(idHbbl) == F       ! Hbbl               depth of bottom boundary layer

Aout(id2dRV) == T       ! pvorticity_bar     2D relative vorticity
Aout(id3dRV) == T       ! pvorticity         3D relative vorticity
Aout(id2dPV) == T       ! rvorticity_bar     2D potential vorticity
Aout(id3dPV) == T       ! rvorticity         3D potential vorticity

Aout(idu3dD) == F       ! u_detided          detided 3D U-velocity
Aout(idv3dD) == F       ! v_detided          detided 3D V-velocity
Aout(idu2dD) == F       ! ubar_detided       detided 2D U-velocity
Aout(idv2dD) == F       ! vbar_detided       detided 2D V-velocity
Aout(idFsuD) == F       ! zeta_detided       detided free-surface

Aout(idTrcD) == F F     ! temp_detided, ...  detided temperature and salinity

Aout(idHUav) == F       ! Huon               u-volume flux, Huon
Aout(idHVav) == F       ! Hvom               v-volume flux, Hvom
Aout(idUUav) == F       ! uu                 quadratic <u*u> term
Aout(idUVav) == F       ! uv                 quadratic <u*v> term
Aout(idVVav) == F       ! vv                 quadratic <v*v> term
Aout(idU2av) == F       ! ubar2              quadratic <ubar*ubar> term
Aout(idV2av) == F       ! vbar2              quadratic <vbar*vbar> term
Aout(idZZav) == F       ! zeta2              quadratic <zeta*zeta> term

Aout(idTTav) == F F     ! temp_2, ...        quadratic <t*t> tracer terms
Aout(idUTav) == F F     ! u_temp, ...        quadratic <u*t> tracer terms
Aout(idVTav) == F F     ! v_temp, ...        quadratic <v*t> tracer terms
Aout(iHUTav) == F F     ! Huon_temp, ...     tracer volume flux, <Huon*t>
Aout(iHVTav) == F F     ! Hvom_temp, ...     tracer volume flux, <Hvom*t>

! Logical switches (TRUE/FALSE) to activate writing of extra inert passive
! tracers other than biological and sediment tracers into the AVERAGE file.

 Aout(inert) == T       ! dye_01, ...        inert passive tracers

! Logical switches (TRUE/FALSE) to activate writing of time-averaged,
! 2D momentum (ubar,vbar) diagnostic terms into DIAGNOSTIC output file.

Dout(M2rate) == T       ! ubar_accel, ...    acceleration
Dout(M2pgrd) == T       ! ubar_prsgrd, ...   pressure gradient
Dout(M2fcor) == F       ! ubar_cor, ...      Coriolis force
Dout(M2hadv) == T       ! ubar_hadv, ...     horizontal total advection
Dout(M2xadv) == T       ! ubar_xadv, ...     horizontal XI-advection
Dout(M2yadv) == T       ! ubar_yadv, ...     horizontal ETA-advection
Dout(M2hrad) == F       ! ubar_hrad, ...     horizontal total radiation stress
Dout(M2hvis) == T       ! ubar_hvisc, ...    horizontal total viscosity
Dout(M2xvis) == T       ! ubar_xvisc, ...    horizontal XI-viscosity
Dout(M2yvis) == T       ! ubar_yvisc, ...    horizontal ETA-viscosity
Dout(M2sstr) == T       ! ubar_sstr, ...     surface stress
Dout(M2bstr) == T       ! ubar_bstr, ...     bottom stress

! Logical switches (TRUE/FALSE) to activate writing of time-averaged,
! 3D momentum (u,v) diagnostic terms into DIAGNOSTIC output file.

Dout(M3rate) == T       ! u_accel, ...       acceleration
Dout(M3pgrd) == T       ! u_prsgrd, ...      pressure gradient
Dout(M3fcor) == F       ! u_cor, ...         Coriolis force
Dout(M3hadv) == T       ! u_hadv, ...        horizontal total advection
Dout(M3xadv) == F       ! u_xadv, ...        horizontal XI-advection
Dout(M3yadv) == F       ! u_yadv, ...        horizontal ETA-advection
Dout(M3vadv) == T       ! u_vadv, ...        vertical advection
Dout(M3hrad) == F       ! u_hrad, ...        horizontal total radiation stress
Dout(M3vrad) == F       ! u_vrad, ...        vertical radiation stress
Dout(M3hvis) == T       ! u_hvisc, ...       horizontal total viscosity
Dout(M3xvis) == F       ! u_xvisc, ...       horizontal XI-viscosity
Dout(M3yvis) == F       ! u_yvisc, ...       horizontal ETA-viscosity
Dout(M3vvis) == T       ! u_vvisc, ...       vertical viscosity

! Logical switches (TRUE/FALSE) to activate writing of time-averaged,
! active (temperature and salinity) and passive (inert) tracer diagnostic
! terms into DIAGNOSTIC output file: [1:NAT+NPT,Ngrids].

Dout(iTrate) == F F     ! temp_rate, ...     time rate of change
Dout(iThadv) == T T     ! temp_hadv, ...     horizontal total advection
Dout(iTxadv) == F F     ! temp_xadv, ...     horizontal XI-advection
Dout(iTyadv) == F F     ! temp_yadv, ...     horizontal ETA-advection
Dout(iTvadv) == F F     ! temp_vadv, ...     vertical advection
Dout(iThdif) == T T     ! temp_hdiff, ...    horizontal total diffusion
Dout(iTxdif) == F F     ! temp_xdiff, ...    horizontal XI-diffusion
Dout(iTydif) == F F     ! temp_ydiff, ...    horizontal ETA-diffusion
Dout(iTsdif) == T F     ! temp_sdiff, ...    horizontal S-diffusion
Dout(iTvdif) == F F     ! temp_vdiff, ...    vertical diffusion

! Generic User parameters, [1:NUSER].

        NUSER =  0
        USER =  0.d0

! NetCDF-4/HDF5 compression parameters for output files.

  NC_SHUFFLE =  1                 ! if non-zero, turn on shuffle filter
  NC_DEFLATE =  1                 ! if non-zero, turn on deflate filter
   NC_DLEVEL =  1                 ! deflate level [0-9]

! Input NetCDF file names, [1:Ngrids].
     GRDNAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/grd/txla2_grd_v4_test_lcut_hglo_wtype.nc
!     ININAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/ini/ocean_ini_20160101.nc
!     ININAME == /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2006/ocean_ini_20060101.nc
!     ININAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/outputs/2006/ocean_rst.nc 
     ININAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/ini/ocean_ini_20070101_mod.nc 
     ITLNAME == ocean_itl.nc
     IRPNAME == ocean_irp.nc
     IADNAME == ocean_iad.nc
     FWDNAME == ocean_fwd.nc
     ADSNAME == ocean_ads.nc

! Nesting grids connectivity data: contact points information. This
! NetCDF file is special and complex. It is currently generated using
! the script "matlab/grid/contact.m" from the Matlab repository.

     NGCNAME =  ocean_ngc.nc

! Input lateral boundary conditions and climatology file names.  The
! USER has the option to split input data time records into several
! NetCDF files (see prologue instructions above). If so, use a single
! line per entry with a vertical bar (|) symbol after each entry,
! except the last one.

     NCLMFILES == 1                         ! number of climate files
!     CLMNAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/bryclm/2015/txla2_clm_2015_12_GoM_NEMO_v4_o2woa.nc |
!                /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/bryclm/2016/txla2.clm.2016_o2woa.nc |
!                /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/bryclm/2017/txla2.clm.2017_o2woa.nc
!     CLMNAME == /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2006/txla2_clm_2006_12_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_01_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_02_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_03_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_04_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_05_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_06_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_07_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_08_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_09_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_10_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_11_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_clm_2007_12_glo_ReAna_v4_o2woa.nc |
!                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2008/txla2_clm_2008_01_glo_ReAna_v4_o2woa.nc

     CLMNAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2006/txla2_clm_2006_12_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_01_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_02_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_03_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_04_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_05_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_06_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_07_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_08_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_09_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_10_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_11_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_12_dyes.nc |  
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2008/txla2_clm_2008_01_dyes.nc   

     NBCFILES == 1                          ! number of boundary files
!     BRYNAME ==  /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2006/txla2_bry_2006_glo_ReAna_v4_o2woa.nc |
!                 /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_bry_2007_glo_ReAna_v4_o2woa.nc |
!                 /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2008/txla2_bry_2008_glo_ReAna_v4_o2woa.nc 

     BRYNAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2006/txla2_clm_2006_dyes.nc | 
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2007/txla2_clm_2007_dyes.nc | 
                /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/inputs/2008/txla2_clm_2008_dyes.nc  

! Input climatology nudging coefficients file name.

     NUDNAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/clm_nudge/txla2_nudge_in_0.3d_out_0.3d_10pt_ensw_linear.nc

! Input Sources/Sinks forcing (like river runoff) file name.

!      SSFNAME == /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2005/txla2_river_2005_AR_newT_SWpass_weekly_v2.nc |
!                 /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2006/txla2_river_2006_AR_newT_SWpass_weekly_v2.nc |
!                 /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_river_2007_AR_newT_SWpass_weekly_v2.nc 
      
!      SSFNAME == /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla2_river_2007_AR_newT_SWpass_weekly_v2.nc 
      SSFNAME == /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/river/2007/txla2_river_2007_AR_newT_SWpass_weekly_mod.nc


! Input forcing NetCDF file name(s).  The USER has the option to enter
! several file names for each nested grid.  For example, the USER may
! have different files for wind products, heat fluxes, tides, etc.
! The model will scan the file list and will read the needed data from
! the first file in the list containing the forcing field. Therefore,
! the order of the file names is very important. If using multiple forcing
! files per grid, first enter all the file names for grid 1, then grid 2,
! and so on.  It is also possible to split input data time records into
! several NetCDF files (see prologue instructions above). Use a single line
! per entry with a continuation (\) or vertical bar (|) symbol after each
! entry, except the last one.

     NFFILES == 1                          ! number of unique forcing files

     FRCNAME == /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2007/txla_frc_ERA5_2007.nc | 
                /scratch/group/geosat/user/d.kobashi/TXLA_ROMS_20yr_obc/inputs/2008/txla_frc_ERA5_2008.nc


! Output NetCDF file names, [1:Ngrids].

     GSTNAME == ocean_gst.nc
     RSTNAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/outputs/2007/ocean_rst.nc
     HISNAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/outputs/2007/ocean_his.nc
     TLMNAME == ocean_tlm.nc
     TLFNAME == ocean_tlf.nc
     ADJNAME == ocean_adj.nc
     AVGNAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/outputs/2007/ocean_avg.nc
     DIANAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/outputs/ocean_dia.nc
     STANAME == /scratch/user/d.kobashi/projects/NOAA-OAP/model_run/dye_online/outputs/2007/ocean_stn.nc

! Input ASCII parameter filenames.

     APARNAM =  /scratch/user/d.kobashi/source_code/COAWST/COAWST.r960-dev/ROMS/External/s4dvar.in
     SPOSNAM =  /scratch/user/d.kobashi/projects/hindcasts/projects/txla2/inputs/stations.in
     FPOSNAM =  /scratch/user/d.kobashi/source_code/COAWST/COAWST.r960-dev/ROMS/External/floats.in
     BPARNAM =  /scratch/user/d.kobashi/source_code/COAWST/COAWST.r960-dev/ROMS/External/bio_Fennel.in
     SPARNAM =  /scratch/user/d.kobashi/source_code/COAWST/COAWST.r960-dev/ROMS/External/sediment.in
     USRNAME =  /scratch/user/d.kobashi/source_code/COAWST/COAWST.r960-dev/ROMS/External/MyFile.dat

